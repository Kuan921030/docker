# image based on ubuntu 20.04 with full support nvidia cuda with version 11.7.0
FROM nvidia/cuda:11.7.0-base-ubuntu20.04

# docker specific tweaks, see
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L85-L105
RUN echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' > /etc/apt/apt.conf.d/docker-clean \
    && echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean \
    && echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";' >> /etc/apt/apt.conf.d/docker-clean

# update package information and install linux standard base
RUN apt-get update && apt-get install -y lsb-release

# configuring tzdata to taipei timezone without prompt
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
RUN TZ=Asia/Taipei \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone \
    && dpkg-reconfigure -f noninteractive tzdata

# configuring key-board configuration without prompt
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y keyboard-configuration

# for managing apt keyrings and installing other packages
RUN apt-get install -y ca-certificates \
    wget \
    curl \
    gnupg2

# add apt key for installing ros
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
RUN apt-get update

# ros
RUN apt-get install -y ros-noetic-desktop-full \
    ros-noetic-teleop-twist-keyboard \
    ros-noetic-rqt-multiplot \
    ros-noetic-socketcan-bridge

# install nvidia cuda toolkit
RUN apt-get install -y nvidia-cuda-toolkit

# compiler
RUN apt-get install -y build-essential \
    swig

# command line utilities
RUN apt-get install -y bash-completion \
    zsh \
    byobu \
    tmux

# other utilities
RUN apt-get install -y net-tools \
    iputils-ping \
    vim \
    git \
    feh

# ros python packages
RUN apt-get install -y python3-pip \
    python3-rosdep \
    python3-rosinstall \
    python3-rosinstall-generator \
    python3-wstool

# install mujoco prerequisites
RUN apt-get install -y libosmesa6-dev \
    libgl1-mesa-glx \
    libglfw3 \
    libgl1-mesa-dev \
    libglew-dev \
    patchelf

# adding user "ros" on host "uuv"
RUN useradd --create-home --shell /bin/bash docker
RUN usermod -aG sudo docker

# password "docker" for user 'root' and 'docker'
RUN echo 'docker\ndocker' | passwd
RUN echo 'docker\ndocker' | passwd docker

# have to run rosdep as root
RUN rosdep init

# change to user "docker" and change to home directory
USER docker
WORKDIR /home/docker

# update python enviroment in ros
RUN rosdep update

# prebuild ws once
RUN bash -c "source /opt/ros/noetic/setup.bash && mkdir -p ws/src && cd ws && catkin_make"

# copy .bashrc and modify it to source ros and workspace "ws"
RUN cp /etc/skel/.bashrc /home/docker
RUN echo 'source /opt/ros/noetic/setup.bash' >> ~/.bashrc
RUN echo 'source /home/docker/ws/devel/setup.bash' >> ~/.bashrc

# install mujoco
RUN bash -c "wget https://github.com/deepmind/mujoco/releases/download/2.1.0/mujoco210-linux-x86_64.tar.gz"
RUN bash -c "tar -xvf mujoco210-linux-x86_64.tar.gz && rm mujoco210-linux-x86_64.tar.gz"
RUN bash -c "mkdir -p .mujoco/mujoco210 && mv mujoco210 .mujoco/"
RUN echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/docker/.mujoco/mujoco210/bin' >> ~/.bashrc
RUN echo 'export LD_PRELOAD=$LD_PRELOAD:/usr/lib/x86_64-linux-gnu/libGLEW.so' >> ~/.bashrc

# install python libraries in non-root to prevent permission problems
# add local python library path to PATH environment variable
RUN echo 'export PATH=:$PATH:~/.local/bin' >> ~/.bashrc

# install openAI-gym (may be replaced by envpool)
RUN pip3 install gym[mujoco]

# install envpool
RUN pip install envpool

# install pythorch
RUN pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu116

# install mujoco python bindings that's required for openAI-gym
RUN pip3 install mujoco-py
